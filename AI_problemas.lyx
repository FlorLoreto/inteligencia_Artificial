#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
% This preamble is designed to ensure that the manual prints
% out as advertised. If you mess with this preamble,
% parts of the document may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

\usepackage{ifpdf} % part of the hyperref bundle
\ifpdf % if pdflatex is used
\addto\captionsspanish{%
\renewcommand\chaptername{Tema}}
\setcounter{chapter}{0}
\pagestyle{plain} 
 % set fonts for nicer pdf view
 \IfFileExists{lmodern.sty}
  {\usepackage{lmodern}}{}

\fi % end if pdflatex is used

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% redefine the \LyX macro for PDF bookmarks
\def\LyX{\texorpdfstring{%
  L\kern-.1667em\lower.25em\hbox{Y}\kern-.125emX\@}
  {LyX}}
\usepackage{titlesec}
\titleformat{\chapter}[display]
  {\normalfont\fontsize{16pt}{18pt}\selectfont\mdseries}
  {\MakeUppercase{\chaptertitlename}\ \thechapter}{18pt}{\MakeUppercase}
\titleformat{\section}
  {\normalfont\fontsize{12pt}{14pt}\selectfont\bfseries}{\thesection}{1em}{}
\titleformat{\subsection}
  {\normalfont\fontsize{12pt}{14pt}\selectfont\itshape}{\thesubsection}{1em}{}
\titlespacing*{\section} {0pt}{0pt}{2.3ex plus .2ex}
\titlespacing*{\subsection}{0pt}{0pt}{1.5ex plus .2ex}

% used for multi-column text
\usepackage{multicol}
\usepackage{inputenc}
\end_preamble
\options fleqn,liststotoc,bibtotoc,idxtotoc,BCOR7.5mm,titlepage,tablecaptionabove
\use_default_options false
\begin_modules
logicalmkup
theorems-starred
endnotes
hanging
minimalistic
eqs-within-sections
figs-within-sections
tabs-within-sections
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 7
InsetLayout CharStyle:MenuItem
LyxType               charstyle
LabelString           menu
LatexType             command
LatexName             menuitem
Font
Family              Sans
EndFont
Preamble
\newcommand*{\menuitem}[1]{{\sffamily #1}}
EndPreamble
End
\end_local_layout
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Manual Personalización de LyX"
\pdf_author "Equipo LyX"
\pdf_subject "LyX-documentation Customization"
\pdf_keywords "LyX, documentation, customization"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,pdfpagelayout=OneColumn, pdfnewwindow=true,pdfstartview=XYZ, plainpages=false, pdfpagelabels"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch OutDated
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle plain
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Problemas de búsqueda.
\end_layout

\begin_layout Subsection

\size footnotesize
Considera el problema de buscar la salida en un laberinto:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problema1.png

\end_inset


\end_layout

\begin_layout Standard
La casilla de comienzo, marcada como I, es la (1,1).
 El objetivo es llegar a la casilla de salida S, situada en la posición
 (3,3), en el 
\emph on
menor número de movimientos
\emph default
.
 Desde cada casilla sólo se podrá acceder a las casillas adyacentes que
 no tengan un muro entre medias (línea gruesa).
 Por ejemplo, desde la casilla (2,1) sólo se puede acceder a la (2,2), y
 a la (1,1).
 El orden de exploración de las acciones será 
\emph on
derecha,
\emph default
 
\emph on
abajo
\emph default
, 
\emph on
izquierda
\emph default
, 
\emph on
arriba
\emph default
.
 En caso de empate se explora 
\emph on
primero el nodo que ha sido generado antes
\emph default
.
\end_layout

\begin_layout Enumerate
Define una heurística admisible para este problema
\end_layout

\begin_layout Enumerate
¿Es monótona?
\end_layout

\begin_layout Enumerate
Usa dicha heurística en la búsqueda de una solución a este laberinto usando
 A* y búsqueda-en-grafo.
\end_layout

\begin_layout Enumerate
¿Garantiza dicha estrategia encontrar la solución óptima para cualquier
 laberinto de este tipo? ¿Y para este laberinto en particular?
\end_layout

\begin_layout Standard

\series bold
Solución:
\end_layout

\begin_layout Enumerate
Heurística: Una posible es la suma de las distancias horizontal y vertical
 hasta la salida: 
\begin_inset Formula $h(n)=|x_{n}-\textrm{S}_{x}|+|y_{n}-\textrm{S}_{y}|$
\end_inset


\end_layout

\begin_layout Enumerate
El coste de cualquier movimiento es 1 y como 
\begin_inset Formula $h$
\end_inset

 en cualquier movimiento varía en una unidad y solo una : Ej: 
\begin_inset Formula $(2,1)\rightarrow(2,2)$
\end_inset

 
\begin_inset Formula $h=|2-3|+|2-2|=1.$
\end_inset

 Esto implica que
\begin_inset Formula 
\[
h(n)\leq C(n\rightarrow n')+h(n')\Rightarrow h\textrm{ es monótona.}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename sol1.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\size footnotesize
Considera el problema de las Torres de Hanoi.
 En él se parte del estado en el que N discos están apilados en orden de
 tamaño en la varilla 1.
 Por ejemplo, para N=3.
\end_layout

\begin_layout Standard
El objetivo es, alcanzar el estado final en el que los N discos están apilados
 en orden en la varilla 3.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problem2.png

\end_inset


\end_layout

\begin_layout Standard
Las acciones permitidas son: 
\end_layout

\begin_layout Itemize
Mover disco superior (si lo hubiera) de varilla 1 a varilla 2 
\end_layout

\begin_layout Itemize
Mover disco superior (si lo hubiera) de varilla 1 a varilla 3 
\end_layout

\begin_layout Itemize
Mover disco superior (si lo hubiera) de varilla 2 a varilla 1 
\end_layout

\begin_layout Itemize
Mover disco superior (si lo hubiera) de varilla 2 a varilla 3 
\end_layout

\begin_layout Itemize
Mover disco superior (si lo hubiera) de varilla 3 a varilla 1 - Mover disco
 superior (si lo hubiera) de varilla 3 a varilla 2 
\end_layout

\begin_layout Standard
Se permite la mover un disco de varilla sólo si la varilla destino se encuentra
 vacía o el disco superior de dicha varilla es mayor que el que queremos
 mover.
 Por tanto el número de acciones posibles desde cada estado puede variar.
 El orden de exploración de las acciones será el orden en el que están enumerada
s en la lista de arriba.
 
\series bold
En caso de empate se explora primero el nodo que ha sido generado antes
\series default
.
 
\end_layout

\begin_layout Itemize
a) Define una heurística admisible para el problema general de N discos
 y tres varillas, en la que el objetivo es llevar todos los discos a la
 varilla 3.
\end_layout

\begin_layout Itemize
b) Encuentra la solución óptima (cada movimiento cuesta 1) con A*, búsqueda-en-g
rafo y dicha heurística para N=2 y el siguiente estado inicial:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problem3.png

\end_inset


\end_layout

\begin_layout Subsection

\size footnotesize
Hemos heredado un reloj de nuestro antepasado, que había trabajado en Londres
 con Charles Babbage y Ada Lovelace en el problema de cómo programar la
 máquina analítica diseñada por el primero.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problemo3.png

\end_inset


\end_layout

\begin_layout Standard
Las etiquetas en esta esfera de reloj están descolocadas.
 Para colocarlas de nuevo, es necesario intercambiarlas dos a dos hasta
 formar el orden correcto.
 El coste de intercambiar dos etiquetas es la suma de los valores numéricos
 de dichas etiquetas.
\end_layout

\begin_layout Description
a.
 Formaliza los estados de búsqueda.
\end_layout

\begin_layout Standard
Utilizando la formalización propuesta:
\end_layout

\begin_layout Description
b.
 Especifica las acciones para generar sucesores y su coste.
\end_layout

\begin_layout Description
c.
 Especifica el estado inicial.
\end_layout

\begin_layout Description
d.
 Especifica el test objetivo.
\end_layout

\begin_layout Description
e.
 Define una heurística admisible no trivial para resolver el problema y
 demuestra su admisibilidad.
\end_layout

\begin_layout Description
f.
 ¿Garantiza A* con esta heurística y sin eliminación de estados repetidos
 encontrar la solución óptima? Explica la razón.
\end_layout

\begin_layout Description
g.
 Detalla el árbol generado por A* sin eliminación de estados repetidos.
 Indica para cada nodo los valores g + h = f y el orden en el que el intento
 de exploración se realiza (es decir, los nodos repetidos y la meta también
 reciben numeración).
 En caso de que haya empates, se elegirá primero en la exploración el nodo
 que haya sido generado antes.
\end_layout

\begin_layout Description
h.
 ¿Encuentra A* la solución óptima en este ejemplo? Justifica tu respuesta,
 poniéndola en relación con tu respuesta al apartado (f).
\end_layout

\begin_layout Subsection

\size footnotesize
Tenemos dos cántaros vacíos.
\end_layout

\begin_layout Standard
El primero tiene una capacidad de 4 litros.
 El segundo, de 3 litros.
 También disponemos de un grifo para llenar los cántaros de agua.
 Los cántaros se pueden llenar completamente, o vaciar completamente.
 También se puede verter el contenido de un cántaro en el otro hasta que
 o bien el primero se vacíe o que el segundo se llene (lo que ocurra antes).
 El coste de cada operación es el número de litros que se transfieren.
 Inicialmente ambos cántaros están vacíos.
 El objetivo es llegar a la siguiente situación: que el cántaro de 4 litros
 de capacidad contenga 1 litro y que el cántaro de 3 litros quede vacío.
\end_layout

\begin_layout Standard
La heurística a utilizar es la suma de los valores absolutos de las diferencias
 entre los volúmenes de agua en cada uno de los cántaros y los correspondientes
 objetivos.
\end_layout

\begin_layout Standard
Responde las siguientes cuestiones:
\end_layout

\begin_layout Description
a.
 Formaliza los estados de búsqueda.
\end_layout

\begin_layout Standard
Utilizando la formalización propuesta:
\end_layout

\begin_layout Description
b.
 Especifica las acciones para generar sucesores: Condiciones que debe cumplir
 el estado inicial, estado que resulta de aplicar la acción y coste.
\end_layout

\begin_layout Description
c.
 Especifica estado inicial.
\end_layout

\begin_layout Description
d.
 Especifica el test objetivo.
\end_layout

\begin_layout Description
e.
 Define la función que permite calcular el valor de la heurística para un
 estado dado ¿Es la heurística propuesta admisible? ¿y monótona?
\end_layout

\begin_layout Description
f.
 ¿Garantiza A* con esta heurística y eliminación de estados repetidos encontrar
 la solución óptima? Explica la razón.
\end_layout

\begin_layout Description
g.
 Detalla el árbol generado por A* con eliminación de estados repetidos.
 Indica para cada nodo los valores g + h = f y el orden en el que el intento
 de exploración se realiza (es decir, los nodos repetidos y la meta también
 reciben numeración).
 En caso de que haya empates, se elegirá primero en la exploración el nodo
 que haya sido generado antes.
\end_layout

\begin_layout Description
h.
 ¿Encuentra A* la solución óptima en este ejemplo? Justifica tu respuesta,
 poniéndola en relación con tu respuesta al apartado (g).
\end_layout

\begin_layout Subsection
\noindent

\size footnotesize
Utiliza el algoritmo minimax con poda alfa-beta
\end_layout

\begin_layout Standard
\noindent
para determinar el valor minimax en la raíz del árbol y la jugada óptima
 suponiendo que el oponente es óptimo.
 Para ello, indica el
\emph on
 orden de recorrido
\emph default
 en el árbol, 
\emph on
numerando los nodos visitados
\emph default
 junto con las 
\emph on
actualizaciones de los valores [
\begin_inset Formula $\alpha,\beta$
\end_inset

]
\emph default
 en cada paso.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problem5.png
	scale 50

\end_inset


\end_layout

\begin_layout Subsection

\size footnotesize
Consideremos el juego de las tres en raya con gravedad.
\end_layout

\begin_layout Standard
Se juega en un tablero vertical de dimensiones 3 x 3 celdas.
 En él dos jugadores, a los que denominaremos X y O, por los símbolos que
 aparecen en las fichas que colocan en el tablero, alternan sus movimientos.
 Inicialmente el tablero está vacío.
 El primer movimiento en una partida corresponde a X.
 En cada turno, el jugador que realiza el movimiento deja caer una de sus
 fichas en una de las columnas libres del tablero.
 Por efecto de la gravedad las fichas caen hasta la celda desocupada más
 baja.
 Los movimientos se exploran comenzando por la columna libre que se encuentre
 más a la izquierda.
 El objetivo es colocar tres fichas alineadas (horizontal, verticalmente
 o en diagonal) antes de que lo haga el oponente.
\end_layout

\begin_layout Standard
Partimos de la posición intermedia del juego:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problem6.png
	scale 140

\end_inset


\end_layout

\begin_layout Description
(i) ¿Quién es MAX y quién es MIN en este estado de la partida?
\end_layout

\begin_layout Description
(ii) Realiza paso a paso el despliegue del árbol de juego para encontrar
 la estrategia óptima de MAX mediante el algoritmo minimax con poda alfa-beta.
\end_layout

\begin_deeper
\begin_layout Standard
Para ello:
\end_layout

\begin_layout Description
a.
 En el árbol de juego, dibuja únicamente los nodos explorados, indicando
 dónde se realiza poda.
\end_layout

\begin_layout Description
b.
 Indica, para cada nodo, el estado del tablero y si el nodo es MAX o MIN.
\end_layout

\begin_layout Description
c.
 Indica en los nodos terminales el valor de la función de utilidad.
\end_layout

\begin_layout Description
d.
 Para los nodos internos, indica en cada paso los valores del intervalo
 [
\begin_inset Formula $\alpha$
\end_inset

,
\begin_inset Formula $\beta$
\end_inset

], etiquetándolo con un entero que se incremente cada vez que este intervalo
 se propague hacia algún nodo hijo o se actualice con la información que
 proviene de algún nodo hijo.
\end_layout

\end_deeper
\begin_layout Description
(ii) ¿Cuál es la estrategia minimax para el jugador que tiene el turno?
 ¿Cuál es el resultado del juego, de acuerdo con esta estrategia?
\end_layout

\begin_layout Description
(iii) ¿Se puede formalizar este juego como un juego de suma 0? ¿Por qué?
\end_layout

\begin_layout Description
(iv) ¿Garantiza mimimax encontrar la estrategia óptima en este juego? ¿Por
 qué?
\end_layout

\begin_layout Subsection

\size footnotesize
Tenemos dos jugadores que se alternan poniendo fichas en un tablero de dimension
es 3x3.
\end_layout

\begin_layout Standard
Uno de los jugadores coloca fichas etiquetadas con ‘1’.
 El otro jugador coloca fichas etiquetadas con ‘0’.
 Inicialmente el tablero está vacío.
 El primer movimiento en una partida corresponde a ‘1’.
 Los jugadores alternan sus movimientos.
 En cada turno, el jugador que realiza el movimiento coloca una de sus fichas
 en una de las celdas libres del tablero.
 Los movimientos se exploran comenzando por la columna libre que se encuentre
 más a la izquierda y por la fila inferior.
 
\end_layout

\begin_layout Standard
La partida termina cuando el tablero está completo.
 Los puntos para el jugador ‘1’ son el número de ternas de bits capicúas
 (es decir: 000, 010, 101, 111) que se pueden leer en horizontal, en vertical
 o en diagonal.
 Los puntos para el jugador ‘0’ son el número de ternas de bits no capicúas
 (es decir: 001, 100, 110, 011).
\end_layout

\begin_layout Standard
Partimos de la posición intermedia del juego:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problema6.png
	scale 140

\end_inset


\end_layout

\begin_layout Description
(i) ¿Quién es MAX y quién es MIN en este estado de la partida? 
\end_layout

\begin_layout Description
(ii) Realiza paso a paso el despliegue del árbol de juego para encontrar
 la estrategia óptima de MAX mediante el algoritmo minimax con poda alfa-beta.
 Para ello
\end_layout

\begin_deeper
\begin_layout Standard
a.
 En el árbol de juego, dibuja únicamente los nodos explorados, indicando
 dónde se realiza poda.
\end_layout

\begin_layout Standard
b.
 Indica, para cada nodo, el estado del tablero y si el nodo es MAX o MIN.
 
\end_layout

\begin_layout Standard
c.
 Indica en los nodos terminales el valor de la función de utilidad.
 
\end_layout

\begin_layout Standard
d.
 Para los nodos internos, indica en cada paso los valores del intervalo
 [
\begin_inset Formula $\alpha$
\end_inset

,
\begin_inset Formula $\beta$
\end_inset

], etiquetándolo con un entero que se incremente cada vez que este intervalo
 se propague hacia algún nodo hijo o se actualice con la información que
 proviene de algún nodo hijo.
 
\end_layout

\end_deeper
\begin_layout Description
(iii) ¿Cuál es la estrategia minimax para el jugador que tiene el turno?
 ¿Cuál es el resultado del juego, de acuerdo con esta estrategia? 
\end_layout

\begin_layout Description
(iv) ¿Se puede formalizar este juego como un juego de suma 0? ¿Por qué?
 
\end_layout

\begin_layout Description
(v) ¿Garantiza mimimax encontrar la estrategia óptima en este juego? ¿Por
 qué?
\end_layout

\begin_layout Subsection

\size footnotesize
Consideremos un juego en el cual los jugadores forman palabras.
\end_layout

\begin_layout Standard
El jugador A consigue puntos por las vocales y el B por las consonantes
 de la palabra formada en el nodo terminal.
 Consideremos el árbol de juego para un estado del juego en el que tiene
 el turno el jugador B.
\end_layout

\begin_layout Standard
Diseña una función de evaluación para completar la definición el juego y
 explica su significado.
 Utiliza el algoritmo minimax con poda alfa-beta para determinar cuál es
 el valor minimax en el nodo raíz del ábol de juego y cuál es la jugada
 óptima en este estado del juego para B.
\end_layout

\begin_layout Standard
Indica con una etiqueta numérica el orden de recorrido de los nodos en el
 árbol.
 En cada nodo interno visitado, indica los valores [
\begin_inset Formula $\alpha$
\end_inset

,
\begin_inset Formula $\beta$
\end_inset

].
 En los nodos finales visitados (y únicamente en ellos) indica el valor
\end_layout

\begin_layout Standard
de la función de evaluación.
 Indica asimismo los nodos en los que hay poda.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename problema7.png
	scale 60

\end_inset


\end_layout

\end_body
\end_document
