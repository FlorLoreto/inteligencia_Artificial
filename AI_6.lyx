#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
% This preamble is designed to ensure that the manual prints
% out as advertised. If you mess with this preamble,
% parts of the document may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

\usepackage{ifpdf} % part of the hyperref bundle
\ifpdf % if pdflatex is used
\addto\captionsspanish{%
\renewcommand\chaptername{Tema}}
\pagestyle{plain} 
 % set fonts for nicer pdf view
 \IfFileExists{lmodern.sty}
  {\usepackage{lmodern}}{}

\fi % end if pdflatex is used

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% redefine the \LyX macro for PDF bookmarks
\def\LyX{\texorpdfstring{%
  L\kern-.1667em\lower.25em\hbox{Y}\kern-.125emX\@}
  {LyX}}

% used for multi-column text
\usepackage{multicol}
\usepackage{inputenc}
\end_preamble
\options fleqn,liststotoc,bibtotoc,idxtotoc,BCOR7.5mm,titlepage,tablecaptionabove
\use_default_options false
\begin_modules
logicalmkup
theorems-starred
endnotes
hanging
minimalistic
eqs-within-sections
figs-within-sections
tabs-within-sections
\end_modules
\maintain_unincluded_children false
\begin_local_layout
Format 7
InsetLayout CharStyle:MenuItem
LyxType               charstyle
LabelString           menu
LatexType             command
LatexName             menuitem
Font
Family              Sans
EndFont
Preamble
\newcommand*{\menuitem}[1]{{\sffamily #1}}
EndPreamble
End
\end_local_layout
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Manual Personalización de LyX"
\pdf_author "Equipo LyX"
\pdf_subject "LyX-documentation Customization"
\pdf_keywords "LyX, documentation, customization"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,pdfpagelayout=OneColumn, pdfnewwindow=true,pdfstartview=XYZ, plainpages=false, pdfpagelabels"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch OutDated
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle plain
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Búsqueda con adversarios.
\end_layout

\begin_layout Section
Búsqueda con adversarios y juegos.
\end_layout

\begin_layout Standard
Ahora nos interesamos por un tipo de búsqueda que incluye la existencia
 de algún tipo de adversario del agente en el mundo.
\end_layout

\begin_layout Standard
Nos centraremos en los entornos mulitiagente, en los cuales cualquier agente
 tendrá que considerar las acciones de otros agentes y cómo afectan a su
 propio bienestar.
\end_layout

\begin_layout Standard
La imprevisibilidad de estos otros agentes puede introducir muchas posibles
 
\series bold
contingencias
\series default
 en el proceso de resolución de problemas del agente.
 Existe una diferencia entre entornos multiagente cooperativos y competitivos.
 Los entornos competitivos, en los cuales los objetivos del agente están
 en conflicto, dan ocasión a problemas de búsqueda entre adversarios, a
 menudo conocidos como
\series bold
 juegos
\series default
..
\end_layout

\begin_layout Standard
Un ejemplo de aplicación de este tipo de búsquedas lo constituyen los juegos
 tales como las damas, el ajedrez o el Go.
\end_layout

\begin_layout Standard
Si revisamos el estado del arte en estos juegos nos encontramos con lo siguiente
:
\end_layout

\begin_layout Enumerate
El juego de las damas fue totalmente resuelto en 2007.
\end_layout

\begin_layout Enumerate
En el ajedrez no se ha llegado tan lejos, pero sí se han conseguido sistemas
 capaces de derrotar a los humanos más expertos.
\end_layout

\begin_layout Enumerate
El juego del Go es de gran complejidad y su factor de ramificación 
\begin_inset Formula $b$
\end_inset

 es de 300.
 En estos momentos los humanos vencen a las máquinas, pero se están haciendo
 progresos mediante el uso de herramientas tales como los métodos Monte
 Carlo (aleatorizados) de expansión.
\end_layout

\begin_layout Standard
Cuando los agentes tienen
\emph on
 objetivos diferentes
\emph default
 nos encontramos ante una 
\series bold
búsqueda con adversarios
\series default
.
\end_layout

\begin_layout Itemize
Idealización en la que los jugadores con objetivos divergentes 
\emph on
alternan turnos
\emph default
 en los que realizan acciones.
\end_layout

\begin_layout Itemize
Los agentes sólo pueden realizar “
\emph on
movimientos legales
\emph default
” (tal como definen las reglas del juego).
 
\end_layout

\begin_layout Itemize
Los movimientos se eligen de acuerdo a una 
\emph on
estrategia 
\emph default
que especifica un movimiento por cada posible movimiento del oponente.
 
\end_layout

\begin_layout Itemize
El juego termina cuando uno de los agentes 
\emph on
alcanza su objetivo 
\emph default
(medido por una función de utilidad).
\end_layout

\begin_layout Section
Tipos de juegos.
\end_layout

\begin_layout Standard
Los juegos pueden clasificarse con diferentes
\series bold
 criterios de clasificación
\series default
: 
\end_layout

\begin_layout Itemize
Número de jugadores
\end_layout

\begin_deeper
\begin_layout Itemize
Dos jugadores en el que cada uno prtende ganar al otro (ej.
 backgammon, ajedrez, damas) 
\end_layout

\begin_layout Itemize
Multijugador donde pueden darse estrategias mixtas (competitivas / cooperativas,
 ej.
 alianzas temporales).
 
\end_layout

\end_deeper
\begin_layout Itemize
Propiedades de la función de utilidad 
\end_layout

\begin_deeper
\begin_layout Standard
- Suma cero: Los agentes tienen utilidades contrarias: la misma función
 de utilidad que uno quiere maximizar y el otro minimizar.
 La suma de utilidades de los agentes es cero, independientemente del resultado
 del juego.
 Ej.
 ajedrez, damas.
\end_layout

\begin_layout Standard
- Suma constante: La suma de utilidades de los agentes es constante, independien
temente del resultado del juego (equivalente a juegos de suma cero: normalizació
n de la utilidad) 
\end_layout

\begin_layout Standard
\noindent
\align left
- Suma variable: Las utilidades de los agentes son independientes.
 No son de suma cero.
 Pueden tener estrategias óptimas complejas, que pueden implicar tanto colaborac
ión (ej.
 monopoly, backgammon), como indiferencia o competencia, según la fase del
 juego.
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename sumacero.png
	scale 65

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Información de la que disponen los jugadores 
\end_layout

\begin_deeper
\begin_layout Itemize
Información perfecta (ej.
 ajedrez, damas, go) 
\end_layout

\begin_layout Itemize
Información parcial (ej.
 casi todos los juegos de cartas)
\end_layout

\end_deeper
\begin_layout Itemize
Elementos de azar
\end_layout

\begin_deeper
\begin_layout Itemize
Deterministas (ej.
 ajedrez, damas, go) 
\end_layout

\begin_layout Itemize
Estocásticos (ej.
 backgammon) 
\end_layout

\end_deeper
\begin_layout Itemize
Tiempo ilimitado / limitado (ej.
 ajedrez con reloj).
 
\end_layout

\begin_layout Itemize
Movimientos ilimitados / limitados (ej.
 ajedrez con máximo de 40 movimientos).
 
\end_layout

\begin_layout Section
Decisiones óptimas en juegos.
 Búsqueda con adversarios.
\end_layout

\begin_layout Standard
Lo que queremos es desarrollar algoritmos para calcular una 
\series bold
\emph on
estrategia
\series default
\emph default
 que recomiende un movimiento en cada estado.
\end_layout

\begin_layout Standard
Este problema es distinto al de búsqueda expuesto anteriormente en que desarroll
ábamos un 
\emph on
plan
\emph default
, secuencia de acciones a ejecutar, que 
\emph on
garantizaban el éxito
\emph default
.
 Ahora, esto no es así puesto que no controlamos a nuestro adversario.
 Lo que necesitamos ahora es una función que nos diga en cada estado lo
 que debemos hacer, esto es, una 
\series bold
\emph on
estrategia 
\series default
contingente
\emph default
.
\end_layout

\begin_layout Standard

\emph on
Plantearemos un 
\emph default
nuevo
\emph on
 problema de búsqueda
\series bold
\emph default
 
\series default
con los siguientes elementos:
\end_layout

\begin_layout Itemize
Estados: 
\begin_inset Formula $\mathbf{S}$
\end_inset

 ( inicial 
\begin_inset Formula $s_{0}$
\end_inset

).
\end_layout

\begin_layout Itemize
Jugadores: 
\begin_inset Formula $\mathbf{P}$
\end_inset

=
\begin_inset Formula $\left\{ 1,2,...,N\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
Acciones : 
\begin_inset Formula $\mathbf{A}$
\end_inset

 que pueden depender del estado y/o del jugador.
\end_layout

\begin_layout Itemize
Función sucesor: 
\series bold
mover
\series default
 (
\emph on
estado-actual 
\begin_inset Formula $\rightarrow$
\end_inset

Estado-sucesor
\emph default
): 
\begin_inset Formula $\mathbf{S\times A\rightarrow S}$
\end_inset


\end_layout

\begin_layout Itemize
Test terminal: determina si el estado del juego es un estado terminal (es
 decir, el juego ha concluido): 
\begin_inset Formula $\mathbf{S\rightarrow\left\{ t,f\right\} }$
\end_inset

 
\end_layout

\begin_layout Itemize
Utilidad (función objetivo o de pago): Valoración numérica de los estados
 terminales.
 
\begin_inset Formula $\mathbf{S\times P\rightarrow R}$
\end_inset


\end_layout

\begin_layout Itemize
Árbol del juego: El estado inicial y los movimientos legales alternados
 de cada parte definen el árbol del juego.
 
\end_layout

\begin_layout Standard
Su 
\emph on
solución
\emph default
 consiste en una 
\series bold
\emph on
estrategia que relaciona estados con acciones
\series default
\emph default
: 
\series bold

\begin_inset Formula $\mathbf{S\rightarrow A}$
\end_inset


\series default
.
\end_layout

\begin_layout Standard
Aplicaremos esta definición al siguiente juego sencillo: 
\end_layout

\begin_layout Enumerate
Dos jugadores (MAX y MIN) realizan movimientos alternados hasta que uno
 de ellos gana (el otro pierde) o hay un empate.
 
\end_layout

\begin_layout Enumerate
Cada jugador tiene un modelo perfecto del entorno determinista y de los
 efectos que producen los movimientos legales.
 
\end_layout

\begin_layout Enumerate
Puede haber limitaciones computacionales / temporales a los movimientos
 de los agentes.
\end_layout

\begin_layout Standard
Por tanto se trata de un juego:
\end_layout

\begin_layout Itemize
Con 
\emph on
dos agentes
\emph default
 
\end_layout

\begin_layout Itemize

\emph on
Información perfecta
\emph default
 
\end_layout

\begin_layout Itemize

\emph on
Determinista 
\end_layout

\begin_layout Itemize

\emph on
De suma cero
\emph default
 
\end_layout

\begin_layout Standard
Una posible representación de este tipo de juegos incluye:
\end_layout

\begin_layout Enumerate
La 
\emph on
matriz de balance final:
\emph default
 Valor de la función de utilidad para cada jugador, dadas las acciones de
 los otros jugadores que representa el resultado.
 En este caso las sumas que MIN (positivas en la matriz) paga a MAX.
\end_layout

\begin_deeper
\begin_layout Standard
Es decir, si MAX juega A y MIN responde con B, MAX gana 3 que debe pagar
 MIN .
 En este caso, los valores positivos son ganancias para MAX y pérdidas para
 MIN y viceversa.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MIN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MAX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
El 
\emph on
árbol del juego:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Graphics
	filename juego.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
A cada uno de los estados asociamos un valor del estado o máxima utilidad
 terminal obtenible.
\end_layout

\end_deeper
\begin_layout Standard
Sea el caso de Pac-man que quiere llegar a comerse un punto moviéndose a
 derecha o a izquierda.
\end_layout

\begin_layout Standard
\noindent
\align left
Consideremos inicialmente este caso como si hubiera 
\series bold
\emph on
un solo agente
\series default
\emph default
 que trata de maximizar el 
\emph on
valor terminal 
\emph default
de la búsqueda, en lugar de reducir los costes.
 En este caso, las ramas de la figura siguiente terminan cuando se alcance
 el fin del juego (Pac-man se come el punto) o no terminan nunca.
 Asociaremos valores a cada uno de los estados terminales.
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename noujoc.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para estos estados terminales, el valor del juego es conocido- Pero ¿qué
 sucede con los demás estados? Desde el estado B puedo alcanzar tanto el
 estado G como todo lo que se encuentre en algún camino por debajo de E.
 P.e.
 desde el nodo B puedo alcanzar cualquier valor terminal que se encuentre
 accesible desde B como p.e.
 6 o -20 pero si quiero maximizar mi utilidad entre 6 y 8 elegiré siempre
 8.
 Ele estado tendrá un valor: será 8 el valor de G.
 
\end_layout

\begin_layout Standard
Por tanto puedo escribir que en el caso de 
\series bold
un solo agente 
\series default
\emph on
el valor de un estado
\emph default
 
\series bold

\begin_inset Formula $\mathbf{s}$
\end_inset


\series default
 (el B, el inicial,...) será 
\emph on
el valor máximo de los estados sucesores que tenga
\emph default
 
\begin_inset Formula $\mathbf{s'}$
\end_inset

:
\begin_inset Formula 
\begin{equation}
\mathbf{V_{s}}=\begin{array}{c}
max\\
s\in\textrm{sucesores(s')}
\end{array}V(s')
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Pasemos al caso en que existen 
\series bold
\emph on
dos adversarios
\series default
\emph default
 (jugadores): Pac-man y un fantasma.
 Pac-man puede moverse a izquierda y a derecha, como antes, pero ahora el
 fantasma también puede moverse en dichas direcciones.
 Sigue existiendo un árbol de estados posibles futuros, solo que ahora también
 el fantasma tiene elecciones que hacer.
 Las características de ramificación son las mismas que las del agente único.
 La diferencia con aquel es 
\series bold
\emph on
quién controla lo que ocurre en cada estado (nodo)
\series default
\emph default
, Ambos adversarios están de acuerdo respecto a lo que 
\emph on
puede pasar
\emph default
, pero están en desacuerdo acerca de lo que 
\emph on
quieren que pase
\emph default
.
 Es imposible que uno de los agentes elija y alcance el valor terminal 8
 porque su adversario puede oponerse.
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename contro.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En este caso, el valor de estado sigue siendo el 
\series bold
\emph on
mejor resultado obtenible frente a un adversario óptimo
\series default
, 
\emph default
pero ahora incorporamos la idea de 
\emph on
razonamiento del adversario
\emph default
.
\end_layout

\begin_layout Standard
\noindent
\align left
De nuevo aquí están dados los valores terminales del juego.
 Si suponemos que el juego termina tras una acción de Pac-man y una respuesta
 del fantasma, reducimos el árbol al de la Fig.
 1.3.2.
 en el que puede verse cómo existen nodos bajo control de nuestro adversario
 -2 y 3.
\end_layout

\begin_layout Standard
Si p.e.
 alcanzamos el estado 3 bajo control del oponente, el fantasma se moverá
 ala izquierda y no podremos visitar el nodo 7 cuyo 
\begin_inset Formula $V(7)=8$
\end_inset

, sino que forzosamente iremos al nodo 6 cuyo
\emph on
 
\series bold
valor 
\series default
\emph default
(
\series bold
\emph on
minimax
\series default
\emph default
)
\emph on
 
\emph default
es 
\begin_inset Formula $\mathbf{-10}$
\end_inset

 y el valor de 3 será -10.
\end_layout

\begin_layout Standard
Los cálculos en estos nodos bajo control adversario - 
\emph on
2
\emph default
 y 
\emph on
3
\emph default
 -son fáciles para el agente:
\begin_inset Formula 
\begin{equation}
\forall s'\;\textrm{{\textstyle bajo}control adversario}\;V(s')=\begin{array}{c}
min\\
s\in sucesores(s')
\end{array}\left\{ \begin{array}{c}
V_{4}=-8\\
V_{5}=-5
\end{array}\Rightarrow V(s`=2)=-8\right.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Para los que están bajo control propio - 
\emph on
1
\emph default
- , en cambio, será
\begin_inset Formula 
\begin{equation}
\forall s\;\textrm{{\textstyle bajo}control del agente}\;V(s)=\begin{array}{c}
max\\
s'\in sucesores(s)
\end{array}\left\{ \begin{array}{c}
V_{2}=-8\\
V_{3}=-10
\end{array}\Rightarrow V(s=1)=-8\right.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Esto implica que las únicas acciones que llevamos a cabo para encontrar
 el valor de un estado consiste en calcular los valores máximos y mínimos
 de otros estados que se encuentran por debajo, de manera que el valor del
 nodo raíz será siempre el valor de un (o conjunto de) nodo terminal del
 árbol del juego.
\end_layout

\begin_layout Section
Algoritmo Minimax.
\end_layout

\begin_layout Standard
Examinemos un juego que satisface las anteriores condiciones conocido como
 es el tres en raya:
\end_layout

\begin_layout Itemize
Jugadores: 2 (MAX y MIN).
\end_layout

\begin_layout Itemize
Estados: se definen por la matriz que contiene los 
\begin_inset Formula $X$
\end_inset

 y 
\begin_inset Formula $\mathcal{O}$
\end_inset

 que hay en el tablero y sus posiciones: 
\begin_inset Formula 
\[
\left[\begin{array}{ccc}
X & \oslash & \oslash\\
\oslash & O & \oslash\\
\oslash & \oslash & \oslash
\end{array}\right],\left[\begin{array}{ccc}
X & \oslash & X\\
\oslash & O & \oslash\\
\oslash & \oslash & \oslash
\end{array}\right],\left[\begin{array}{ccc}
X & O & X\\
\oslash & O & \oslash\\
\oslash & \oslash & \oslash
\end{array}\right],.....
\]

\end_inset


\end_layout

\begin_layout Itemize
Estado inicial: Tablero 3x3 vacío:
\end_layout

\begin_deeper
\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
\begin_inset Formula $\left[\begin{array}{ccc}
\oslash & \oslash & \oslash\\
\oslash & \oslash & \oslash\\
\oslash & \oslash & \oslash
\end{array}\right]$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Movimientos: Poner una ficha (MAX: 
\begin_inset Formula $\times$
\end_inset

, MIN: 
\begin_inset Formula $\circ$
\end_inset

) en una de las casillas vacías.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
Test terminal: 3 fichas del mismo jugador están alineadas.
\end_layout

\begin_layout Itemize
Utilidades terminales:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Utilidad terminal para
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MAX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MIN 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gana MAX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gana MIN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Empate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Es fácil ver que se trata de un juego
\end_layout

\begin_layout Itemize
con 
\emph on
dos agentes
\emph default
; 
\end_layout

\begin_layout Itemize
con 
\emph on
información perfecta
\emph default
: cada jugador conoce perfectamente el estado del juego
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
En el poker p.e.
 cada jugador ignora la mano que tiene cada uno de los demás jugadores.
\end_layout

\end_inset

;
\end_layout

\begin_layout Itemize

\emph on
determinista: 
\emph default
los cambios en el entorno son totalmente previsibles, conocidas las acciones
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
El poker tiene elementos estocásticos ya que cada jugador ignora la mano
 que tienen los demás jugadores.
 Solo puede hacer conjeturas probabilísticas al respecto conociendo algunos
 datos como las cartas propias y los descartes de cada jugador.
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize
De 
\emph on
suma-cero
\emph default
 (si ganar vale 1, lo que gana MAX lo pierde MIN).
\end_layout

\begin_layout Standard
A este tipo de juegos es aplicable el método Minimax.
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename tic-tac.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
¿Cuáles serían las estrategias óptimas?
\end_layout

\begin_layout Standard
Como MAX mueve primero, MAX y MIN alternan sus movimientos.
 En el árbol del juego, los nodos de profundidad par (impar) corresponden
 a MAX (MIN).
 Una dupla de profundidad k en el árbol del juego corresponde a los nodos
 del árbol del juego de profundidades 2k y 2k+1.
 
\end_layout

\begin_layout Itemize

\series bold
Descripción formal del juego
\series default
: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Estado inicial: Configuración inicial del tablero + identidad del primer
 jugador.
\end_layout

\begin_layout Enumerate
Función sucesor: Sucesores(n) 
\end_layout

\begin_layout Enumerate
Test terminal: Terminal(n).
 
\end_layout

\begin_layout Enumerate
Función de utilidad: Utilidad(n), sólo si n es un nodo terminal.
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Estrategia óptima para MAX
\series default
: Estrategia con un resultado al menos tan bueno como cualquier otra estrategia,
 asumiendo que MIN es un oponente infalible.
 
\end_layout

\begin_layout Itemize

\series bold
Estrategia minimax
\series default
:
\end_layout

\begin_deeper
\begin_layout Standard
Usar el 
\emph on
valor minimax de un nodo
\emph default
 para guiar la búsqueda: 
\series bold
Utilidad de un nodo
\series default
 (desde el punto de vista de MAX) asumiendo que 
\series bold
ambos jugadores juegan óptimamente
\series default
 desde ahí hasta el fin del juego 
\begin_inset Formula 
\begin{equation}
minimax(n)\left\{ \begin{array}{cc}
Utilidad(n)\qquad\qquad\qquad\qquad & \textrm{si \textbf{n} es un nodo terminal}\\
max\{minimax(s);\;s\in sucesores(n)\} & \textrm{si \textbf{n}es un nodo MAX}\\
min\{minimax(s);\;s\in sucesores(n)\} & \textrm{si \textbf{n}es un nodo MIN}
\end{array}.\right]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
La idea básica es elegir el movimiento con el máximo valor del minimax:
 la mayor ganancia posible frente al mejor juego adversario.
 Se eligen movimientos que conduzcan a la victoria aunque MIN trate de bloquearl
os.
\begin_inset Graphics
	filename minimax.png

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename minimax.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
El algoritmo minimax es recursivo, corre de abajo arriba y propaga el árbol
 hacia el nodo raíz y calcularemos el mínimo de los hijos en un nodo min
 y su máximo en los nodos max.
 El valor calculado en el nodo raíz será
\begin_inset space \space{}
\end_inset

el 
\emph on
valor minimax tanto del nodo raíz
\emph default
 como de otros nodos.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename algomax.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\noindent
\align left
Apliquemos el algoritmo al problema expuesto en la sección 3:
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename minimejem.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Estos mismos cálculos pueden plantearse en la matriz de balance final:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MIN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mínimos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MAX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
En cada una de las filas - que representan las jugadas de MAX - añado una
 columna de mínimos valores que obtendría el jugador, lo que refleja la
 estrategia que seguiría MIN.
 La estrategia a seguir por MAX, sería, evidentemente, jugar 
\series bold
B 
\series default
que
\series bold
 
\series default
es el mayor de los mínimos
\series bold
.
\end_layout

\begin_layout Standard
Si lo miramos desde la perspectiva de MIN, la matriz de balance sería:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MIN
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MAX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mínimos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
-3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-10
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
y si MIN comenzara el juego, optaría por la estrategia A.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename maximin.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Eficiencia del Minimax.
\end_layout

\begin_layout Standard
Es como el DFS: opera recursivamente en cada nodo y va a través de los hijos
 des izquierda a derecha, de modo que como en DFS:
\end_layout

\begin_layout Itemize

\series bold
Completo
\series default
 sólo si el árbol del juego es finito (notar que puede haber estrategias
 óptimas finitas para árboles infinitos) 
\end_layout

\begin_layout Itemize

\series bold
Óptimo
\series default
 sólo si el oponente es óptimo (si el oponente es subóptimo, podemos usar
 sus debilidades para encontrar estrategias mejores 
\emph on
distintas de las generadas por el Minimax
\emph default
).
\end_layout

\begin_layout Itemize

\series bold
Complejidad temporal: 
\series default

\begin_inset Formula $O(b^{m})$
\end_inset


\end_layout

\begin_layout Itemize

\series bold
Complejidad espacial: 
\begin_inset Formula $O(b\cdot m)$
\end_inset


\end_layout

\begin_layout Standard

\series bold
m
\series default
 = profundidad máxima del árbol del juego.
\end_layout

\begin_layout Standard
Ejemplo: ajedrez 
\begin_inset Formula $b\approx35$
\end_inset

, 
\begin_inset Formula $m\simeq100$
\end_inset

 siendo m en este caso el número de movimientos que hay en un juego.
 Como vemos el ajedrez es completamente imposible de explorar en su totalidad,
 pero ¿se necesita realmente explorar todo el árbol?
\end_layout

\begin_layout Section*
Ejemplo:
\end_layout

\begin_layout Standard
En el caso siguiente:
\end_layout

\begin_layout Standard
1.
 ¿Cuál es el valor minimax del árbol? Respuesta: 8
\end_layout

\begin_layout Standard
\noindent
\align left
2.
 ¿Qué acción tomará MAX según la estrategia minimax? Respuesta: Izquierda.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename maxejemplo.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Decisiones imperfectas.
 Funciones de evaluación.
\end_layout

\begin_layout Standard
¿Cómo podemos enfrentar problemas como el del ajedrez donde, probablemente,
 la complejidad temporal nos impide explorar todo el árbol?
\end_layout

\begin_layout Standard
La solución - bastante sencilla - consiste en hacer una 
\emph on
búsqueda limitada en profundidad
\emph default
.
 
\end_layout

\begin_layout Itemize
Solo descenderemos por el árbol mientras tengamos tiempo y ahí truncaremos
 el árbol de búsqueda.
 
\end_layout

\begin_layout Itemize
Sustituiremos el valor terminal, que no alcanzaremos, por una
\series bold
\emph on
 función de evaluación
\series default
\emph default
 de 
\emph on
estados no terminales
\emph default
.
\end_layout

\begin_layout Standard
y aplicaremos el minimax como si estos estados intermedios fueran terminales.
\end_layout

\begin_layout Standard
Si p.e.
 en un juego de ajedrez, tenemos 100 seg.
 para el movimiento y podemos explorar 10,000 nodos.seg
\begin_inset Formula $^{-1}$
\end_inset

 .
 Podríamos explorar 
\begin_inset Formula $10^{6}$
\end_inset

 nodos por movimiento lo cual, dadas las características de la poda 
\begin_inset Formula $\alpha-\beta$
\end_inset

 , donde se alcanzan profundidades de 8 puede dar lugar a un nivel decente
 de juego.
\end_layout

\begin_layout Standard
Existen dos factores que inciden en la eficiencia de este tipo de algoritmos:
\end_layout

\begin_layout Enumerate
la profundidad: cuanto mayor, más eficiente;
\end_layout

\begin_layout Enumerate
la exactitud de la función de evaluación.
\end_layout

\begin_layout Standard
En general existe una compensación entre ambas: cuanta mayor profundidad
 alcancemos, menor será la influencia de la calidad de la función de evaluación
 y,en sentido contrario, si somos capaces de desarrollar una función de
 evaluación complicada y exacta, ganaremos tiempo al no tener que profundizar
 demasiado en el árbol de búsqueda.
\end_layout

\begin_layout Standard
Por tanto, en este tipo de búsqueda necesitamos una función (de evaluación)
 capaz de decirnos si un 
\emph on
estado no terminal
\emph default
 es bueno o malo.
 Idealmente,
\emph on
 una función de evaluación debería 
\series bold
devolver un valor
\series default
 igual al valor
\series bold
 minimax de un estado
\series default
 que 
\series bold
no es terminal
\series default
\emph default
, de un modo similar a la heurística de A*.
 Se trata de una función de truncación.
\end_layout

\begin_layout Standard
En la práctica se suele buscar una función que, en promedio, sea positiva
 cuando cuando el valor minimax es positivo y negativa cuando lo es el minimax.
\end_layout

\begin_layout Standard
¿Cómo son estas funciones de evaluación? 
\end_layout

\begin_layout Enumerate

\series bold
Evaluación basada en utilidad.
\end_layout

\begin_deeper
\begin_layout Standard
Una forma puede ser calcular el valor esperado de la utilidad estimando
 las “probabilidades” de diferentes resultados finales desde la posición
 actual:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E[U(n)]={\displaystyle \sum_{resultados}Prob(n\rightarrow resultado)\cdot U(resultado)}
\end{equation}

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Evaluación basada en características.
\end_layout

\begin_deeper
\begin_layout Standard
Si pensamos en el ajedrez, podemos encontrar algunas propiedades que son
 importantes.
 P.e.
 si somos el blanco y tenemos más caballos que el negro, puede ser positivo,
 pero no tanto como tener más reinas.
 Consultando con expertos en el juego podemos llegar a reunir un grupo de
 
\emph on
características
\emph default
 que puedan ayudarnos a controlar el tablero.
 Estas características son ellas mismas funciones que reciben como argumento
 el estado del juego y devuelven un valor numérico -
\begin_inset Formula $f_{i}(n)$
\end_inset

-.
 Una forma típica de combinarlas es mediante una combinación lineal de las
 mismas:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Eval(n)=w_{1}f_{1}(n)+w_{2}f_{2}(n)+...+w_{n}f_{n}(n)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde p.e.
 
\begin_inset Formula 
\[
\begin{array}{c}
f_{1}(n)=(\textrm{nº de reinas blancas}-\textrm{nº de reinas negras})\\
f_{2}(n)=\textrm{(nº de caballos blancos-nº de caballos negros)}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
En general pueden combinarse como 
\begin_inset Formula 
\begin{equation}
Eval(n)=F[f_{1}(n),...,f_{n}(n)]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Aquellas características consideradas más importantes, reciben un peso mayor
 medido por 
\begin_inset Formula $w_{i}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
Si nos fijamos en tres en raya, una característica que favorece al jugador
 es la diferencia entre el número de filas, columnas y diagonales disponibles
 para cada jugador, es decir:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Eval(n)=P_{MAX}(n)-P_{Min}(n)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
En la Fig.
 1.5.1.
 podemos ver algunos valores de esta función de evaluación para algunos
 casos.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename eval3.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La función (1.5.3.) 
\begin_inset Formula $F$
\end_inset

 contiene conocimiento experto.
 
\begin_inset Formula $F$
\end_inset

 puede ser aprendido (aprendizaje automático) de la experiencia (ej.
 se puede dejar al ordenador jugar contra sí mismo).
\end_layout

\begin_layout Standard

\series bold
Ejercicio
\series default
: De las situaciones mostradas en la figura, ¿qué función de evaluación
 dará mejor puntuación a la izquierda?
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename eval_ej.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
a) 1/(distancia de Pac-man al punto)
\end_layout

\begin_layout Standard
b) Distancia de Pac-man al fantasma.
\end_layout

\begin_layout Standard
c) Distancia de Pac-man al fantasma+1/(distancia de Pac-man al punto)
\end_layout

\begin_layout Standard
d) Distancia de Pac-man al fantasma+1000/(distancia de Pac-man al punto)
\end_layout

\begin_layout Standard
Respuesta: 
\series bold
b
\series default
.
 (izda.
 8, dcha.
 4) y 
\series bold
c
\series default
 (izda.
 8+1/4; izda 4+1/3).
\end_layout

\begin_layout Section
Poda 
\begin_inset Formula $\mathbf{\alpha-\beta}$
\end_inset

.
\end_layout

\begin_layout Standard
Hemos visto que para realizar una buena búsqueda, precisamos una buena función
 de evaluación, pero dado que el minimax es tan bueno en decisiones tácticas,
 cuanto más profundamente descendamos en el árbol, mejor será el resultado.
\end_layout

\begin_layout Standard
Por ello lo que haremos es basarnos en un hecho observable: Para calcular
 el valor minimax de un nodo muchas veces no es necesario explorar exhaustivamen
te.
 Por ello vamos a buscar procedimientos para 
\begin_inset Quotes fld
\end_inset


\emph on
podar
\emph default

\begin_inset Quotes frd
\end_inset

 el árbol de aquellas ramas que no precisan ser analizadas.
\end_layout

\begin_layout Standard
\noindent
\align left
En la Fig.
 1.6.1.
 presentamos un árbol de juego en que vamos desvelando 
\emph on
todos
\emph default
 los nodos en el orden señalado.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename poda.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
Sin embargo, si observamos en detalle el árbol podemos ver que es totalmente
 imprescindible visitar los nodos 1, 2 y 3.
 En efecto siendo 
\begin_inset Formula $V(1)$
\end_inset

 = 3 tengo que seguir visitando 2 y 3 por si alguno fuera menor que este.
 Una vez visitados, 
\begin_inset Formula $V(10)=$
\end_inset

3 .
 Sin embargo, tras visitar el nodo 4, 
\emph on
no es preciso explorar los nodos 5 y 6 
\emph default
ya que, puesto que 
\begin_inset Formula $V(4)=2\Rightarrow V(11)\leq2$
\end_inset

 y por tanto el nodo inicial siempre elegirá el nodo 10 antes que el 11
 donde 
\begin_inset Formula $V(10)>V(11)$
\end_inset

 cualesquiera que sean los valores de los nodos 5 y 6 y, por tanto, estas
 ramas pueden 
\begin_inset Quotes fld
\end_inset

podarse
\begin_inset Quotes frd
\end_inset

.
 Pero aún nos queda analizar la rama que comienza en 12 para la cual los
 nodos 7, 8 y 9 sí han de ser analizados en su totalidad ya que en 7 solo
 sabemos que 
\begin_inset Formula $V(12)\leq14$
\end_inset

 y en 8 
\begin_inset Formula $V(8)\leq5$
\end_inset

 pero 
\begin_inset Formula $V(9)$
\end_inset

 podría ser 0 o 1 e influiría en el valor del estado inicial.
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename poda2.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por tanto, hemos visto que la posibilidad de poda depende de los valores
 de los estados y su posición en el árbol.
 Hemos podido podar porque el nodo 11 es un candidato para MAX peor que
 el nodo 10.
\end_layout

\begin_layout Standard
La Fig.1.6.3.
 muestra el desarrollo del algoritmo:
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename podalfa.png
	scale 70

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A medida que realizamos la búsqueda en el nodo n (MIN) como empezamos con
 
\begin_inset Formula $\infty$
\end_inset

 la estimación de los sucesores de n va disminuyendo y su valor le interesa
 a MAX pero solo en tanto no haya a lo largo del camino hacia el nodo ningún
 valor que para MAX sea mejor.
 
\end_layout

\begin_layout Standard
El principio general es: 
\end_layout

\begin_layout Enumerate
considere
\series bold
 un nodo 
\begin_inset Formula $\mathbf{n}$
\end_inset

 en 
\series default
el árbol (véase la Figura 1.6.3.), tal que 
\emph on
MAX tiene una opción de movimiento a ese nodo
\emph default
.
 
\end_layout

\begin_layout Enumerate
Si 
\series bold
MAX tiene una mejor selección
\series default
 - 
\emph on

\begin_inset Formula $m$
\end_inset


\emph default
 en el nodo padre de 
\begin_inset Formula $n$
\end_inset

 - o en cualquier punto más lejano a lo largo del camino raíz-nodo -.
 nodo 
\begin_inset Formula $a$
\end_inset

: 
\begin_inset Formula $V(n)<V(a)$
\end_inset

) - entonces
\series bold

\begin_inset Formula $n$
\end_inset

 nunca será alcanzado
\series default
 en el juego actual, 
\begin_inset Formula $V(n)$
\end_inset

 no será el valor que se propague hacia arriba.
 
\end_layout

\begin_layout Enumerate
Una vez que 
\series bold
hemos averiguado bastant
\series default
e sobre 
\begin_inset Formula $n$
\end_inset

 (examinando a algunos de sus descendientes) para alcanzar esta conclusión,
 
\series bold
podemos podarlo
\series default
.
\end_layout

\begin_layout Standard
\noindent
\align left
El algoritmo realiza una búsqueda primero en profundidad desde un nodo dado.
 
\end_layout

\begin_layout Standard
\noindent
\align left
Si durante dicha búsqueda se encuentran los nodos m -10- y n - 11- en diferentes
 subárboles, y el nodo m es mejor que el n, entonces, asumiendo decisiones
 óptimas, nunca se llegará al nodo n en el juego actual.
\end_layout

\begin_layout Standard
En cada nodo se debe tomar en cuenta un
\emph on
 intervalo
\emph default
 [
\begin_inset Formula $\alpha,$
\end_inset


\begin_inset Formula $\beta$
\end_inset

] que contiene el valor 
\emph on
minimax 
\emph default
del nodo - 
\begin_inset Formula $minimax(n)\in[\alpha,\beta]$
\end_inset

 - , y actualizar los límites del intervalo según va avanzando la búsqueda
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha$
\end_inset

 es el valor de la 
\emph on
mejor alternativa para MAX encontrada
\emph default
 hasta el momento en el camino raíz-nodo (es decir, la de mayor valor) 
\begin_inset Formula $\Rightarrow$
\end_inset

los valores de 
\begin_inset Formula $\alpha$
\end_inset

 nunca descienden en un nodo MAX 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\beta$
\end_inset

 es el valor de la 
\emph on
mejor alternativa para MIN encontrada
\emph default
 hasta el momento (es decir, la de menor valor) 
\begin_inset Formula $\Rightarrow$
\end_inset

 los valores de 
\begin_inset Formula $\beta$
\end_inset

 nunca aumentan en un nodo MIN.
\end_layout

\begin_layout Standard
Por tanto, cuando consideramos un nodo cualquiera 
\begin_inset Formula $\alpha\leq V(n)\leq\beta$
\end_inset

.
\end_layout

\begin_layout Standard
Reglas para parar la búsqueda: poda las ramas restantes en un nodo (es decir,
 termina la llamada recurrente) tan pronto como el valor del nodo actual
 es peor que el actual valor 
\begin_inset Formula $\alpha$
\end_inset

 o 
\begin_inset Formula $\beta$
\end_inset

 para MAX o MIN respectivamente.
\end_layout

\begin_layout Itemize
Parar la búsqueda en un nodo MAX cuyo valor de 
\begin_inset Formula $V(n)\leq\alpha$
\end_inset

 en cualquier camino hacia la raíz.
 
\end_layout

\begin_layout Itemize
Parar la búsqueda en un nodo MIN cuyo valor de 
\begin_inset Formula $V(n)\geq$
\end_inset


\begin_inset Formula $\beta$
\end_inset

 en cualquier camino hacia la raíz.
 
\end_layout

\begin_layout Standard
y, por tanto, 
\begin_inset Formula $\alpha\leq V(n)\leq\beta$
\end_inset

.
 Si esto no se verifica, 
\emph on
podamos
\emph default
 la rama.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename desigua.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
El algoritmo puede expresarse como:
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename algopoda.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Características de la poda 
\begin_inset Formula $\alpha-\beta$
\end_inset

.
\end_layout

\begin_layout Itemize
La poda no afecta al resultado final, pero sí puede afectar a otros nodos
 intermedios.
 Por este motivo, la versión más 
\emph on
ingenua 
\emph default
de la poda
\emph on
 puede dejar al agente sin estrategia.
 No basta con estar acertado en la raíz, sino también en los sucesores de
 esta.
 
\emph default
En la figura siguiente, el nodo a la derecha de D puede podarse ya que al
 nodo raíz (MAX) solo le importa que 
\begin_inset Formula $V(B)\leq10=V(A)$
\end_inset

 y, por lo tanto, no necesita conocer el valor exacto 
\begin_inset Formula $V(B)$
\end_inset

 ya que en el nodo raíz que se encuentra por encima de A y B 
\emph on
cualquier valor de 
\begin_inset Formula $V(B)>10$
\end_inset

 nunca será elegido
\emph default
 por MAX y 
\begin_inset Formula $\mathbf{MAX}(V(A),V(B))=\mathbf{MAX}(10,\leq10)=\mathbf{10}$
\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename SIESTRA.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
La eficacia de la poda depende del orden en la búsqueda: Es buena si los
 movimientos buenos se exploran primero.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Caso peor: No hay mejora 
\end_layout

\begin_layout Itemize
Ordenación aleatoria: 
\begin_inset Formula $O(b^{3d/4})\Rightarrow$
\end_inset

 
\begin_inset Formula $b*=b^{3/4}$
\end_inset

 
\end_layout

\begin_layout Itemize
Ordenación perfecta (los sucesores mejores están los primeros): 
\begin_inset Formula $O(b^{m/2})$
\end_inset

 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\begin_inset Formula $b*=b^{1/2}.$
\end_inset

 
\end_layout

\begin_layout Standard
El uso de heurísticas sencillas lleva a menudo a b* cercano al óptimo (ej.
 examinar primero los movimientos que fueron los mejor considerados en el
 anterior turno).
\end_layout

\end_deeper
\begin_layout Subsection*
\noindent
La poda 
\begin_inset Formula $\alpha-\beta$
\end_inset

 paso a paso.
\end_layout

\begin_layout Standard
La figura siguiente muestra paso a paso la aplicación de la poda alfa-beta.
\end_layout

\begin_layout Standard
\noindent
\align left
Puesto que partimos sin haber explorado nada y la raíz es MAX(imizador),
 inicializamos 
\series bold
\emph on
A
\series default
\emph default
 con la mejor opción para MAX es (
\color red
1
\color inherit
) 
\emph on

\begin_inset Formula $V(A)=-\infty$
\end_inset


\emph default
 y la mejore opción para inicializar MIN(imizador) es 
\begin_inset Formula $+\infty$
\end_inset

.
 De modo que (
\color red
2
\color inherit
) 
\begin_inset Formula $\alpha=-\infty$
\end_inset

y 
\begin_inset Formula $\beta=+\infty$
\end_inset

 que iremos pasando en profundidad hasta el nodo 
\series bold
\emph on
B
\series default
\emph default
.
 Por tanto, el valor de B - MIN- será (
\color red
3
\color inherit
) 
\begin_inset Formula $V(B)=+\infty$
\end_inset

 y de este hay sucesores con valores terminales.
 
\series bold
\emph on
B
\series default
 
\emph default
pasa hacia 
\series bold
\emph on
D
\series default
\emph default
 (
\color red
4
\color inherit
) los valores 
\begin_inset Formula $\alpha=-\infty$
\end_inset

y 
\begin_inset Formula $\beta=+\infty$
\end_inset

ya que no se ha explorado ningún nodo aún.
 
\series bold
\emph on
D
\series default
\emph default
 es un nodo hoja y (
\color red
5
\color inherit
) retorna el valor 10.
 Dado que 
\series bold
\emph on
B
\series default
\emph default
 es MIN, 
\begin_inset Formula $V$
\end_inset

 pasa de 
\begin_inset Formula $-\infty$
\end_inset

 a 
\begin_inset Formula $10$
\end_inset

 que es mejor que 
\begin_inset Formula $+\beta$
\end_inset

 .
 Antes de seguir , el nodo MIN(imizer) decide si explora más sucesores.
 Para ello comprueba la siguiente condición:
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Formula 
\[
\textrm{¿Es}(V(B)=10<\alpha=-\infty)?\Rightarrow\begin{array}{c}
Sí\Rightarrow podar\\
No\Rightarrow Continuar
\end{array}
\]

\end_inset

pero como no se cumple que 
\begin_inset Formula $V(B)$
\end_inset

 sea menor que la mejor opción para MAX , hemos de mirar más sucesores de
 
\series bold
\emph on
B
\series default
\emph default
.
 Bajamos hacia 
\series bold
\emph on
E
\series default
\emph default
 (
\color red
6
\color inherit
)
\begin_inset Formula $\alpha=-\infty$
\end_inset

y 
\begin_inset Formula $\beta=+10$
\end_inset

 MIN tiene una nueva opción de 
\begin_inset Formula $8<10$
\end_inset

 por lo cual 
\begin_inset Formula $V(B)=8$
\end_inset

 que propagamos hacia arriba (
\color red
7
\color inherit
) hasta la raíz (MAX) quien debe considerar la oportunidad de continuar
 la búsqueda.
 Para ello MAX compara su valor actual con la mejor opción disponible a
 lo largo del árbol desde la raíz, esto es:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\textrm{¿Es}(V(A)=8>\beta=\infty)?\Rightarrow\begin{array}{c}
Sí\Rightarrow podar\\
No\Rightarrow Continuar
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
Por tanto, continuamos hasta 
\series bold
\emph on
C
\series default
\emph default
 (
\color red
7
\color inherit
) y
\series bold
\emph on
 F
\series default
\emph default
 (
\color red
8
\color inherit
) con 
\begin_inset Formula $\alpha=8$
\end_inset

 y 
\begin_inset Formula $\beta=+\infty.$
\end_inset

 Pasamos 4 hacia arriba (
\color red
10
\color inherit
) y como en 
\series bold
\emph on
C
\series default
 
\emph default
4 es mejor para MIN que 
\begin_inset Formula $8$
\end_inset

, lo sustituye.
 Ahora 
\series bold
C
\series default
 - MIN ha de decidir si sigue.
 Para ello vemos que MAX tiene un 
\begin_inset Formula $V(B)=8$
\end_inset

 y 
\begin_inset Formula $V(C)\leq4$
\end_inset

 por lo que no es necesario explorar más y podamos 
\begin_inset Formula $f$
\end_inset

 
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename pruntot.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fig.
 1.6.7: Siguiendo el desarrollo, se expandirán el resto de sucesores del padre.
 En este caso se expande el camino que conduce a los nodos hoja 7 y, buscando
 un valor 
\begin_inset Formula $\beta$
\end_inset

 menor, el nodo etiquetado con 4.
 En este momento el valor momentáneo de 
\begin_inset Formula $\beta$
\end_inset

 en ese nivel es 4 (el mínimo entre 7 y 4).
 Esto implica que en este momento en el nivel superior, el padre del nodo
 que etiquetamos anteriormente con 
\begin_inset Formula $\beta$
\end_inset

 igual a 5, y de este 
\begin_inset Formula $\beta$
\end_inset

 igual a 4 momentáneo, debe decidir el mejor valor, el más alto al encontrarse
 en un nivel MAX), si siguiéramos expandiendo hijos del nodo MIN padre de
 7 y 4, sólo podríamos conseguir valores menores a 4, lo que seguiría implicando
 una elección de la jugada izquierda en el nivel MAX, por lo tanto, podemos
 podar el resto de hijos, tal y como se muestra en la figura.
\end_layout

\begin_layout Standard
El resto del desarrollo del árbol se seguiría utilizando los criterios mencionad
os con anterioridad.
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename paso.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
